
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/rightUMINUSNAME NUMBERstatement : NAME "=" expressionstatement : expressionexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expressionexpression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : NUMBERexpression : NAME'
    
_lr_action_items = {'$end':([1,3,5,6,7,8,15,16,17,18,19,20,],[0,-9,-10,-2,-10,-7,-8,-1,-4,-5,-6,-3,]),'*':([3,5,6,7,8,9,15,16,17,18,19,20,],[-9,-10,12,-10,-7,12,-8,12,12,-5,-6,12,]),'-':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[2,2,-9,2,-10,11,-10,-7,11,2,2,2,2,2,-8,11,-4,-5,-6,-3,]),'NUMBER':([0,2,4,10,11,12,13,14,],[3,3,3,3,3,3,3,3,]),'+':([3,5,6,7,8,9,15,16,17,18,19,20,],[-9,-10,14,-10,-7,14,-8,14,-4,-5,-6,-3,]),'(':([0,2,4,10,11,12,13,14,],[4,4,4,4,4,4,4,4,]),'NAME':([0,2,4,10,11,12,13,14,],[5,7,7,7,7,7,7,7,]),'=':([5,],[10,]),'/':([3,5,6,7,8,9,15,16,17,18,19,20,],[-9,-10,13,-10,-7,13,-8,13,13,-5,-6,13,]),')':([3,7,8,9,15,17,18,19,20,],[-9,-10,-7,15,-8,-4,-5,-6,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,2,4,10,11,12,13,14,],[6,8,9,16,17,18,19,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME = expression','statement',3,'p_statement_assign','calc.py',59),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',64),
  ('expression -> expression + expression','expression',3,'p_expression_binop','calc.py',69),
  ('expression -> expression - expression','expression',3,'p_expression_binop','calc.py',70),
  ('expression -> expression * expression','expression',3,'p_expression_binop','calc.py',71),
  ('expression -> expression / expression','expression',3,'p_expression_binop','calc.py',72),
  ('expression -> - expression','expression',2,'p_expression_uminus','calc.py',84),
  ('expression -> ( expression )','expression',3,'p_expression_group','calc.py',89),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',94),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',99),
]
